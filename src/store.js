import { reactive, watch } from "vue";

const messageVariants = {
    greetings: ['üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–±–æ—Ç—ã, –æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö, —É—Å–ª–æ–≤–∏—è—Ö –∫–æ–Ω–∫—É—Ä—Å–∞ –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º.'],
    responseWork: {
        intro: ['üëã –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—É—Ä—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã, —É–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ –∞–Ω–∫–µ—Ç—É.'], 
        success: ['', '']
    },
    guaranteedGifts: ['–°–ø–∏—Å–∫–∏ –ø–µ—Ä–≤—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –∑–∞ —É—Å–ø–µ—à–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö:'],
    requirements: ['–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É'],
    checkWorkResult: {
        notFound: ['ü•∫ –†–∞–±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ:'],
        congratulations: ['üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞ –∫ —É—á–∞—Å—Ç–∏—é –≤ –∫–æ–Ω–∫—É—Ä—Å–µ'],
        exception: ['üòü –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é'],
    }
}

const store = reactive({
    scene: 'breeding',
    scenes: ['breeding', 'guaranteed-gifts', 'requirements-for-works'],
    responseMessage: messageVariants.greetings,
    workNotFound: null,
    worskSuccess: null,
    worksData: null,
    links: {
        contacts: '/contacts',
    },
    selected: {
        'breeding': [
            { id: 1, value: 'get-work-status', label: '–°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã', isLink: false },
            { id: 2, value: 'guaranteed-gifts', label: '–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏', isLink: false },
            { id: 3, value: 'https://komusart.ru/o-konkurse/usloviya-uchastiya/', label: '–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è', isLink: true },
            { id: 4, value: 'requirements-for-works', label: '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ä–∞–±–æ—Ç–∞–º', isLink: false },
            { id: 5, value: '/', label: '–ù–µ—Ç –Ω—É–∂–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞', isLink: true },
        ],
        'guaranteed-gifts': [
            { id: 1, value: '/', label: '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ - –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –¥–µ—Ç–µ–π', isLink: true },
            { id: 2, value: '/', label: '–í–ö–æ–Ω—Ç–∞–∫—Ç–µ - –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö', isLink: true },
            { id: 3, value: '/', label: '–¢–µ–ª–µ–≥—Ä–∞–º - –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –¥–µ—Ç–µ–π', isLink: true },
            { id: 4, value: '/', label: '–¢–µ–ª–µ–≥—Ä–∞–º - –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö', isLink: true },
            { id: 5, value: '/', label: '–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏ - –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –¥–µ—Ç–µ–π', isLink: true },
        ],
        'requirements-for-works': [
            { id: 1, value: 'https://komusart.ru/o-konkurse/usloviya-uchastiya/#children ', label: '–î–µ—Ç—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã', isLink: true },
            { id: 2, value: 'https://komusart.ru/o-konkurse/usloviya-uchastiya/#adults', label: '–†–∞–±–æ—Ç—ã –∞–≤—Ç–æ—Ä–æ–≤ –æ—Ç 18 –ª–µ—Ç', isLink: true },
        ]
    },
    checkWorkResult(data, fields) {
        console.log(fields);
        console.log(data);

        if (data.message === '–†–∞–±–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã') {
            const result =`
                <span class="not-found-user">
                    <span>
                        –§–∞–º–∏–ª–∏—è:
                        <b>${fields.surname}</b>
                    </span>
                    <span>
                        E-mail:
                        <b>${fields.email}</b>
                    </span>
                    <span>
                        –¢–µ–ª–µ—Ñ–æ–Ω:
                        <b>${fields.phone}</b>
                    </span>
                </span>
            `
            store.responseMessage = [
                ...messageVariants.checkWorkResult.notFound,
                result,
            ]
            store.worskSuccess = false;
            store.worksData = null;
            return;
        }

        if (data.success)  {
            store.worskSuccess = true;
            store.worksData = data.data;
        }
    }
});

watch(()=> store.scene, (val)=> {
    if (val === 'breeding') {
        store.responseMessage = messageVariants.greetings;
    }

    if (val === 'get-work-status') {
        store.responseMessage = messageVariants.responseWork.intro;
    }

    if (val === 'guaranteed-gifts') {
        store.responseMessage = messageVariants.guaranteedGifts;
    }

    if (val === 'requirements-for-works') {
        store.responseMessage = messageVariants.requirements;
    }
});

export { store };